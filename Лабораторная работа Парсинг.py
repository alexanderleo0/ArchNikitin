# -*- coding: utf-8 -*-
"""Лабораторная работа Архитектор ИИ Парсер данных.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TK50aBecVbHH4tynADkhZ1J4NFCYm3H5
"""

import requests
from bs4 import BeautifulSoup

# URL сайта для парсинга
url = "https://pogoda7.ru/"

# Отправляем GET-запрос к сайту
response = requests.get(url)

# Проверяем, что запрос прошел успешно
if response.status_code == 200:
    # Создаем объект BeautifulSoup для парсинга HTML
    soup = BeautifulSoup(response.text, 'html.parser')

    # Находим все элементы с классом "gorod"
    city_elements = soup.find_all(class_="gorod")

    # Создаем список списков для хранения информации о городах и температуре
    city_temperature_list = []

    # Проходимся по каждому элементу и извлекаем информацию
    for city_element in city_elements:
        city_name = city_element.a.get_text(strip=True)  # Название города
        temperature = city_element.find(class_="weather_temp").get_text()  # Температура

        # Добавляем информацию о городе и температуре в список
        city_temperature_list.append([city_name, temperature])

    # Выводим список списков
    for city_temperature in city_temperature_list:
        print(city_temperature)
else:
    print("Ошибка при выполнении запроса.")

"""Для хранения информации о городах и температуре в реляционной базе данных, можно создать таблицу WeatherData, которая будет иметь следующую структуру:

Таблица WeatherData:

Колонка id (Целое число, автоинкремент) - уникальный идентификатор записи.
Колонка city_name (Текст) - название города.
Колонка temperature (Десятичное число) - текущая температура в градусах Цельсия.

"""

CREATE TABLE WeatherData (
    id INT AUTO_INCREMENT PRIMARY KEY,
    city_name VARCHAR(255),
    temperature DECIMAL(5, 2)
);